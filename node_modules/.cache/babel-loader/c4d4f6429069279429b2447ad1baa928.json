{"ast":null,"code":"import { a as _createForOfIteratorHelperLoose } from './_rollupPluginBabelHelpers-65983997.js';\n/**\n * Transforms an array with multiple levels into a flattened one.\n *\n * @example\n * import { flatten } from \"reakit-utils\";\n *\n * flatten([0, 1, [2, [3, 4], 5], 6]);\n * // => [0, 1, 2, 3, 4, 5, 6]\n */\n\nfunction flatten(array) {\n  var flat = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n    var maybeArray = _step.value;\n\n    if (Array.isArray(maybeArray)) {\n      flat.push.apply(flat, flatten(maybeArray));\n    } else {\n      flat.push(maybeArray);\n    }\n  }\n\n  return flat;\n}\n\nexport { flatten };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckboxTask/React_checkbox_task/node_modules/reakit-utils/es/flatten.js"],"names":["a","_createForOfIteratorHelperLoose","flatten","array","flat","_iterator","_step","done","maybeArray","value","Array","isArray","push","apply"],"mappings":"AAAA,SAASA,CAAC,IAAIC,+BAAd,QAAqD,yCAArD;AAEA;;;;;;;;;;AASA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAIC,IAAI,GAAG,EAAX;;AAEA,OAAK,IAAIC,SAAS,GAAGJ,+BAA+B,CAACE,KAAD,CAA/C,EAAwDG,KAA7D,EAAoE,CAAC,CAACA,KAAK,GAAGD,SAAS,EAAlB,EAAsBE,IAA3F,GAAkG;AAChG,QAAIC,UAAU,GAAGF,KAAK,CAACG,KAAvB;;AAEA,QAAIC,KAAK,CAACC,OAAN,CAAcH,UAAd,CAAJ,EAA+B;AAC7BJ,MAAAA,IAAI,CAACQ,IAAL,CAAUC,KAAV,CAAgBT,IAAhB,EAAsBF,OAAO,CAACM,UAAD,CAA7B;AACD,KAFD,MAEO;AACLJ,MAAAA,IAAI,CAACQ,IAAL,CAAUJ,UAAV;AACD;AACF;;AAED,SAAOJ,IAAP;AACD;;AAED,SAASF,OAAT","sourcesContent":["import { a as _createForOfIteratorHelperLoose } from './_rollupPluginBabelHelpers-65983997.js';\n\n/**\n * Transforms an array with multiple levels into a flattened one.\n *\n * @example\n * import { flatten } from \"reakit-utils\";\n *\n * flatten([0, 1, [2, [3, 4], 5], 6]);\n * // => [0, 1, 2, 3, 4, 5, 6]\n */\nfunction flatten(array) {\n  var flat = [];\n\n  for (var _iterator = _createForOfIteratorHelperLoose(array), _step; !(_step = _iterator()).done;) {\n    var maybeArray = _step.value;\n\n    if (Array.isArray(maybeArray)) {\n      flat.push.apply(flat, flatten(maybeArray));\n    } else {\n      flat.push(maybeArray);\n    }\n  }\n\n  return flat;\n}\n\nexport { flatten };\n"]},"metadata":{},"sourceType":"module"}