{"ast":null,"code":"import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useBox } from '../Box/Box.js';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { hasFocusWithin } from 'reakit-utils/hasFocusWithin';\nimport { isPortalEvent } from 'reakit-utils/isPortalEvent';\nimport { getActiveElement } from 'reakit-utils/getActiveElement';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { getClosestFocusable } from 'reakit-utils/tabbable'; // Automatically generated\n\nvar TABBABLE_KEYS = [\"disabled\", \"focusable\"];\n\nfunction isUA(string) {\n  if (!canUseDOM) return false;\n  return window.navigator.userAgent.indexOf(string) !== -1;\n}\n\nvar isSafariOrFirefoxOnMac = isUA(\"Mac\") && !isUA(\"Chrome\") && (isUA(\"Safari\") || isUA(\"Firefox\"));\n\nfunction focusIfNeeded(element) {\n  if (!hasFocusWithin(element)) {\n    element.focus();\n  }\n} // Safari and Firefox on MacOS don't focus on buttons on mouse down like other\n// browsers/platforms. Instead, they focus on the closest focusable ancestor\n// element, which is ultimately the body element. So we make sure to give focus\n// to the tabbable element on mouse down so it works consistently across\n// browsers.\n// istanbul ignore next\n\n\nfunction useFocusOnMouseDown() {\n  if (!isSafariOrFirefoxOnMac) return undefined;\n\n  var _React$useState = useState(null),\n      tabbable = _React$useState[0],\n      scheduleFocus = _React$useState[1];\n\n  useEffect(function () {\n    if (!tabbable) return;\n    focusIfNeeded(tabbable);\n    scheduleFocus(null);\n  }, [tabbable]);\n  var onMouseDown = useCallback(function (event) {\n    var element = event.currentTarget;\n    if (isPortalEvent(event)) return;\n    if (!isButton(element)) return;\n    var activeElement = getActiveElement(element);\n    if (!activeElement) return;\n    var activeElementIsBody = activeElement.tagName === \"BODY\";\n    var focusableAncestor = getClosestFocusable(element.parentElement);\n\n    if (activeElement === focusableAncestor || activeElementIsBody && !focusableAncestor) {\n      // When the active element is the focusable ancestor, it'll not emit\n      // focus/blur events. After all, it's already focused. So we can't\n      // listen to those events to focus this tabbable element.\n      // When the active element is body and there's no focusable ancestor,\n      // we also don't have any other event to listen to since body never\n      // emits focus/blur events on itself.\n      // In both of these cases, we have to schedule focus on this tabbable\n      // element.\n      scheduleFocus(element);\n    } else if (focusableAncestor) {\n      // Clicking (mouse down) on the tabbable element on Safari and Firefox\n      // on MacOS will fire focus on the focusable ancestor element if\n      // there's any and if it's not the current active element. So we wait\n      // for this event to happen before moving focus to this element.\n      // Instead of moving focus right away, we have to schedule it,\n      // otherwise it's gonna prevent drag events from happening.\n      var onFocus = function onFocus() {\n        return scheduleFocus(element);\n      };\n\n      focusableAncestor.addEventListener(\"focusin\", onFocus, {\n        once: true\n      });\n    } else {\n      // Finally, if there's no focsuable ancestor and there's another\n      // element with focus, we wait for that element to get blurred before\n      // focusing this one.\n      var onBlur = function onBlur() {\n        return focusIfNeeded(element);\n      };\n\n      activeElement.addEventListener(\"blur\", onBlur, {\n        once: true\n      });\n    }\n  }, []);\n  return onMouseDown;\n}\n\nfunction isNativeTabbable(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\" || element.tagName === \"A\" || element.tagName === \"AUDIO\" || element.tagName === \"VIDEO\";\n}\n\nvar useTabbable = createHook({\n  name: \"Tabbable\",\n  compose: useBox,\n  keys: TABBABLE_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var disabled = _ref.disabled;\n    return _objectSpread2({\n      disabled: disabled\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlTabIndex = _ref2.tabIndex,\n        htmlOnClick = _ref2.onClick,\n        htmlOnMouseDown = _ref2.onMouseDown,\n        htmlStyle = _ref2.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"tabIndex\", \"onClick\", \"onMouseDown\", \"style\"]);\n\n    var ref = useRef(null);\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onMouseDownRef = useLiveRef(htmlOnMouseDown);\n    var trulyDisabled = options.disabled && !options.focusable;\n\n    var _React$useState2 = useState(true),\n        nativeTabbable = _React$useState2[0],\n        setNativeTabbable = _React$useState2[1];\n\n    var tabIndex = nativeTabbable ? htmlTabIndex : htmlTabIndex || 0;\n    var style = options.disabled ? _objectSpread2({\n      pointerEvents: \"none\"\n    }, htmlStyle) : htmlStyle;\n    var focusOnMouseDown = useFocusOnMouseDown();\n    useIsomorphicEffect(function () {\n      var tabbable = ref.current;\n\n      if (!tabbable) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine if the element is a native tabbable element because `ref` wasn't passed to the component.\", \"See https://reakit.io/docs/tabbable\") : void 0;\n        return;\n      }\n\n      if (!isNativeTabbable(tabbable)) {\n        setNativeTabbable(false);\n      }\n    }, []);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n    }, [options.disabled]);\n    var onMouseDown = useCallback(function (event) {\n      var _onMouseDownRef$curre;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);\n      if (event.defaultPrevented) return;\n      focusOnMouseDown === null || focusOnMouseDown === void 0 ? void 0 : focusOnMouseDown(event);\n    }, [options.disabled, focusOnMouseDown]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      style: style,\n      tabIndex: !trulyDisabled ? tabIndex : undefined,\n      disabled: trulyDisabled && nativeTabbable ? true : undefined,\n      \"aria-disabled\": options.disabled ? true : undefined,\n      onClick: onClick,\n      onMouseDown: onMouseDown\n    }, htmlProps);\n  }\n});\nvar Tabbable = createComponent({\n  as: \"div\",\n  useHook: useTabbable\n});\nexport { Tabbable, useTabbable };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckboxTask/React_checkbox_task/node_modules/reakit/es/Tabbable/Tabbable.js"],"names":["a","_objectSpread2","_","_objectWithoutPropertiesLoose","createComponent","createHook","useBox","useRef","useState","useCallback","useEffect","useForkRef","isButton","warning","useLiveRef","useIsomorphicEffect","hasFocusWithin","isPortalEvent","getActiveElement","canUseDOM","getClosestFocusable","TABBABLE_KEYS","isUA","string","window","navigator","userAgent","indexOf","isSafariOrFirefoxOnMac","focusIfNeeded","element","focus","useFocusOnMouseDown","undefined","_React$useState","tabbable","scheduleFocus","onMouseDown","event","currentTarget","activeElement","activeElementIsBody","tagName","focusableAncestor","parentElement","onFocus","addEventListener","once","onBlur","isNativeTabbable","useTabbable","name","compose","keys","useOptions","options","_ref","disabled","useProps","_ref2","htmlRef","ref","htmlTabIndex","tabIndex","htmlOnClick","onClick","htmlOnMouseDown","htmlStyle","style","htmlProps","onClickRef","onMouseDownRef","trulyDisabled","focusable","_React$useState2","nativeTabbable","setNativeTabbable","pointerEvents","focusOnMouseDown","current","process","env","NODE_ENV","_onClickRef$current","stopPropagation","preventDefault","call","_onMouseDownRef$curre","defaultPrevented","Tabbable","as","useHook"],"mappings":"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","sourcesContent":["import { a as _objectSpread2, _ as _objectWithoutPropertiesLoose } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport { useBox } from '../Box/Box.js';\nimport { useRef, useState, useCallback, useEffect } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport { isButton } from 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport { useIsomorphicEffect } from 'reakit-utils/useIsomorphicEffect';\nimport { hasFocusWithin } from 'reakit-utils/hasFocusWithin';\nimport { isPortalEvent } from 'reakit-utils/isPortalEvent';\nimport { getActiveElement } from 'reakit-utils/getActiveElement';\nimport { canUseDOM } from 'reakit-utils/canUseDOM';\nimport { getClosestFocusable } from 'reakit-utils/tabbable';\n\n// Automatically generated\nvar TABBABLE_KEYS = [\"disabled\", \"focusable\"];\n\nfunction isUA(string) {\n  if (!canUseDOM) return false;\n  return window.navigator.userAgent.indexOf(string) !== -1;\n}\n\nvar isSafariOrFirefoxOnMac = isUA(\"Mac\") && !isUA(\"Chrome\") && (isUA(\"Safari\") || isUA(\"Firefox\"));\n\nfunction focusIfNeeded(element) {\n  if (!hasFocusWithin(element)) {\n    element.focus();\n  }\n} // Safari and Firefox on MacOS don't focus on buttons on mouse down like other\n// browsers/platforms. Instead, they focus on the closest focusable ancestor\n// element, which is ultimately the body element. So we make sure to give focus\n// to the tabbable element on mouse down so it works consistently across\n// browsers.\n// istanbul ignore next\n\n\nfunction useFocusOnMouseDown() {\n  if (!isSafariOrFirefoxOnMac) return undefined;\n\n  var _React$useState = useState(null),\n      tabbable = _React$useState[0],\n      scheduleFocus = _React$useState[1];\n\n  useEffect(function () {\n    if (!tabbable) return;\n    focusIfNeeded(tabbable);\n    scheduleFocus(null);\n  }, [tabbable]);\n  var onMouseDown = useCallback(function (event) {\n    var element = event.currentTarget;\n    if (isPortalEvent(event)) return;\n    if (!isButton(element)) return;\n    var activeElement = getActiveElement(element);\n    if (!activeElement) return;\n    var activeElementIsBody = activeElement.tagName === \"BODY\";\n    var focusableAncestor = getClosestFocusable(element.parentElement);\n\n    if (activeElement === focusableAncestor || activeElementIsBody && !focusableAncestor) {\n      // When the active element is the focusable ancestor, it'll not emit\n      // focus/blur events. After all, it's already focused. So we can't\n      // listen to those events to focus this tabbable element.\n      // When the active element is body and there's no focusable ancestor,\n      // we also don't have any other event to listen to since body never\n      // emits focus/blur events on itself.\n      // In both of these cases, we have to schedule focus on this tabbable\n      // element.\n      scheduleFocus(element);\n    } else if (focusableAncestor) {\n      // Clicking (mouse down) on the tabbable element on Safari and Firefox\n      // on MacOS will fire focus on the focusable ancestor element if\n      // there's any and if it's not the current active element. So we wait\n      // for this event to happen before moving focus to this element.\n      // Instead of moving focus right away, we have to schedule it,\n      // otherwise it's gonna prevent drag events from happening.\n      var onFocus = function onFocus() {\n        return scheduleFocus(element);\n      };\n\n      focusableAncestor.addEventListener(\"focusin\", onFocus, {\n        once: true\n      });\n    } else {\n      // Finally, if there's no focsuable ancestor and there's another\n      // element with focus, we wait for that element to get blurred before\n      // focusing this one.\n      var onBlur = function onBlur() {\n        return focusIfNeeded(element);\n      };\n\n      activeElement.addEventListener(\"blur\", onBlur, {\n        once: true\n      });\n    }\n  }, []);\n  return onMouseDown;\n}\n\nfunction isNativeTabbable(element) {\n  return element.tagName === \"BUTTON\" || element.tagName === \"INPUT\" || element.tagName === \"SELECT\" || element.tagName === \"TEXTAREA\" || element.tagName === \"A\" || element.tagName === \"AUDIO\" || element.tagName === \"VIDEO\";\n}\n\nvar useTabbable = createHook({\n  name: \"Tabbable\",\n  compose: useBox,\n  keys: TABBABLE_KEYS,\n  useOptions: function useOptions(options, _ref) {\n    var disabled = _ref.disabled;\n    return _objectSpread2({\n      disabled: disabled\n    }, options);\n  },\n  useProps: function useProps(options, _ref2) {\n    var htmlRef = _ref2.ref,\n        htmlTabIndex = _ref2.tabIndex,\n        htmlOnClick = _ref2.onClick,\n        htmlOnMouseDown = _ref2.onMouseDown,\n        htmlStyle = _ref2.style,\n        htmlProps = _objectWithoutPropertiesLoose(_ref2, [\"ref\", \"tabIndex\", \"onClick\", \"onMouseDown\", \"style\"]);\n\n    var ref = useRef(null);\n    var onClickRef = useLiveRef(htmlOnClick);\n    var onMouseDownRef = useLiveRef(htmlOnMouseDown);\n    var trulyDisabled = options.disabled && !options.focusable;\n\n    var _React$useState2 = useState(true),\n        nativeTabbable = _React$useState2[0],\n        setNativeTabbable = _React$useState2[1];\n\n    var tabIndex = nativeTabbable ? htmlTabIndex : htmlTabIndex || 0;\n    var style = options.disabled ? _objectSpread2({\n      pointerEvents: \"none\"\n    }, htmlStyle) : htmlStyle;\n    var focusOnMouseDown = useFocusOnMouseDown();\n    useIsomorphicEffect(function () {\n      var tabbable = ref.current;\n\n      if (!tabbable) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine if the element is a native tabbable element because `ref` wasn't passed to the component.\", \"See https://reakit.io/docs/tabbable\") : void 0;\n        return;\n      }\n\n      if (!isNativeTabbable(tabbable)) {\n        setNativeTabbable(false);\n      }\n    }, []);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n    }, [options.disabled]);\n    var onMouseDown = useCallback(function (event) {\n      var _onMouseDownRef$curre;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      (_onMouseDownRef$curre = onMouseDownRef.current) === null || _onMouseDownRef$curre === void 0 ? void 0 : _onMouseDownRef$curre.call(onMouseDownRef, event);\n      if (event.defaultPrevented) return;\n      focusOnMouseDown === null || focusOnMouseDown === void 0 ? void 0 : focusOnMouseDown(event);\n    }, [options.disabled, focusOnMouseDown]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      style: style,\n      tabIndex: !trulyDisabled ? tabIndex : undefined,\n      disabled: trulyDisabled && nativeTabbable ? true : undefined,\n      \"aria-disabled\": options.disabled ? true : undefined,\n      onClick: onClick,\n      onMouseDown: onMouseDown\n    }, htmlProps);\n  }\n});\nvar Tabbable = createComponent({\n  as: \"div\",\n  useHook: useTabbable\n});\n\nexport { Tabbable, useTabbable };\n"]},"metadata":{},"sourceType":"module"}