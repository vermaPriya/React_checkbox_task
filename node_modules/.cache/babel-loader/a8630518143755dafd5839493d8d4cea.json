{"ast":null,"code":"import { useContext, createElement } from 'react';\nimport { SystemContext } from './SystemContext.js';\nimport { a as _objectWithoutPropertiesLoose } from './_rollupPluginBabelHelpers-0c84a174.js';\n\nfunction isRenderProp(children) {\n  return typeof children === \"function\";\n}\n/**\n * Custom hook that will call `children` if it's a function. If\n * `useCreateElement` has been passed to the context, it'll be used instead.\n *\n * @example\n * import React from \"react\";\n * import { SystemProvider, useCreateElement } from \"reakit-system\";\n *\n * const system = {\n *   useCreateElement(type, props, children = props.children) {\n *     // very similar to what `useCreateElement` does already\n *     if (typeof children === \"function\") {\n *       const { children: _, ...rest } = props;\n *       return children(rest);\n *     }\n *     return React.createElement(type, props, children);\n *   },\n * };\n *\n * function Component(props) {\n *   return useCreateElement(\"div\", props);\n * }\n *\n * function App() {\n *   return (\n *     <SystemProvider unstable_system={system}>\n *       <Component url=\"url\">{({ url }) => <a href={url}>link</a>}</Component>\n *     </SystemProvider>\n *   );\n * }\n */\n\n\nvar useCreateElement = function useCreateElement(type, props, children) {\n  if (children === void 0) {\n    children = props.children;\n  }\n\n  var context = useContext(SystemContext);\n\n  if (context.useCreateElement) {\n    return context.useCreateElement(type, props, children);\n  }\n\n  if (typeof type === \"string\" && isRenderProp(children)) {\n    var _ = props.children,\n        rest = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n    return children(rest);\n  }\n\n  return /*#__PURE__*/createElement(type, props, children);\n};\n\nexport { useCreateElement };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckBoxTask/node_modules/reakit-system/es/useCreateElement.js"],"names":["useContext","createElement","SystemContext","a","_objectWithoutPropertiesLoose","isRenderProp","children","useCreateElement","type","props","context","_","rest"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,CAAC,IAAIC,6BAAd,QAAmD,yCAAnD;;AAEA,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AAC9B,SAAO,OAAOA,QAAP,KAAoB,UAA3B;AACD;AAED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCH,QAAvC,EAAiD;AACtE,MAAIA,QAAQ,KAAK,KAAK,CAAtB,EAAyB;AACvBA,IAAAA,QAAQ,GAAGG,KAAK,CAACH,QAAjB;AACD;;AAED,MAAII,OAAO,GAAGV,UAAU,CAACE,aAAD,CAAxB;;AAEA,MAAIQ,OAAO,CAACH,gBAAZ,EAA8B;AAC5B,WAAOG,OAAO,CAACH,gBAAR,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCH,QAAtC,CAAP;AACD;;AAED,MAAI,OAAOE,IAAP,KAAgB,QAAhB,IAA4BH,YAAY,CAACC,QAAD,CAA5C,EAAwD;AACtD,QAAIK,CAAC,GAAGF,KAAK,CAACH,QAAd;AAAA,QACIM,IAAI,GAAGR,6BAA6B,CAACK,KAAD,EAAQ,CAAC,UAAD,CAAR,CADxC;;AAGA,WAAOH,QAAQ,CAACM,IAAD,CAAf;AACD;;AAED,SAAO,aAAaX,aAAa,CAACO,IAAD,EAAOC,KAAP,EAAcH,QAAd,CAAjC;AACD,CAnBD;;AAqBA,SAASC,gBAAT","sourcesContent":["import { useContext, createElement } from 'react';\nimport { SystemContext } from './SystemContext.js';\nimport { a as _objectWithoutPropertiesLoose } from './_rollupPluginBabelHelpers-0c84a174.js';\n\nfunction isRenderProp(children) {\n  return typeof children === \"function\";\n}\n\n/**\n * Custom hook that will call `children` if it's a function. If\n * `useCreateElement` has been passed to the context, it'll be used instead.\n *\n * @example\n * import React from \"react\";\n * import { SystemProvider, useCreateElement } from \"reakit-system\";\n *\n * const system = {\n *   useCreateElement(type, props, children = props.children) {\n *     // very similar to what `useCreateElement` does already\n *     if (typeof children === \"function\") {\n *       const { children: _, ...rest } = props;\n *       return children(rest);\n *     }\n *     return React.createElement(type, props, children);\n *   },\n * };\n *\n * function Component(props) {\n *   return useCreateElement(\"div\", props);\n * }\n *\n * function App() {\n *   return (\n *     <SystemProvider unstable_system={system}>\n *       <Component url=\"url\">{({ url }) => <a href={url}>link</a>}</Component>\n *     </SystemProvider>\n *   );\n * }\n */\n\nvar useCreateElement = function useCreateElement(type, props, children) {\n  if (children === void 0) {\n    children = props.children;\n  }\n\n  var context = useContext(SystemContext);\n\n  if (context.useCreateElement) {\n    return context.useCreateElement(type, props, children);\n  }\n\n  if (typeof type === \"string\" && isRenderProp(children)) {\n    var _ = props.children,\n        rest = _objectWithoutPropertiesLoose(props, [\"children\"]);\n\n    return children(rest);\n  }\n\n  return /*#__PURE__*/createElement(type, props, children);\n};\n\nexport { useCreateElement };\n"]},"metadata":{},"sourceType":"module"}