{"ast":null,"code":"import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport { useClickable } from '../Clickable/Clickable.js';\nimport { removeIndexFromArray } from 'reakit-utils/removeIndexFromArray';\nimport { createEvent } from 'reakit-utils/createEvent'; // Automatically generated\n\nvar CHECKBOX_STATE_KEYS = [\"state\", \"setState\"];\nvar CHECKBOX_KEYS = [].concat(CHECKBOX_STATE_KEYS, [\"value\", \"checked\"]);\n\nfunction getChecked(options) {\n  if (typeof options.checked !== \"undefined\") {\n    return options.checked;\n  }\n\n  if (typeof options.value === \"undefined\") {\n    return !!options.state;\n  }\n\n  var state = Array.isArray(options.state) ? options.state : [];\n  return state.indexOf(options.value) !== -1;\n}\n\nfunction fireChange(element, onChange) {\n  var event = createEvent(element, \"change\");\n  Object.defineProperties(event, {\n    type: {\n      value: \"change\"\n    },\n    target: {\n      value: element\n    },\n    currentTarget: {\n      value: element\n    }\n  });\n  onChange === null || onChange === void 0 ? void 0 : onChange(event);\n}\n\nfunction useIndeterminateState(ref, options) {\n  useEffect(function () {\n    var element = ref.current;\n\n    if (!element) {\n      process.env.NODE_ENV !== \"production\" ? warning(options.state === \"indeterminate\", \"Can't set indeterminate state because `ref` wasn't passed to component.\", \"See https://reakit.io/docs/checkbox/#indeterminate-state\") : void 0;\n      return;\n    }\n\n    if (options.state === \"indeterminate\") {\n      element.indeterminate = true;\n    } else if (element.indeterminate) {\n      element.indeterminate = false;\n    }\n  }, [options.state, ref]);\n}\n\nvar useCheckbox = createHook({\n  name: \"Checkbox\",\n  compose: useClickable,\n  keys: CHECKBOX_KEYS,\n  useOptions: function useOptions(_ref, _ref2) {\n    var value = _ref2.value,\n        checked = _ref2.checked;\n\n    var _ref$unstable_clickOn = _ref.unstable_clickOnEnter,\n        unstable_clickOnEnter = _ref$unstable_clickOn === void 0 ? false : _ref$unstable_clickOn,\n        options = _objectWithoutPropertiesLoose(_ref, [\"unstable_clickOnEnter\"]);\n\n    return _objectSpread2({\n      unstable_clickOnEnter: unstable_clickOnEnter,\n      value: value,\n      checked: getChecked(_objectSpread2({\n        checked: checked\n      }, options))\n    }, options);\n  },\n  useProps: function useProps(options, _ref3) {\n    var htmlRef = _ref3.ref,\n        htmlOnChange = _ref3.onChange,\n        htmlOnClick = _ref3.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref3, [\"ref\", \"onChange\", \"onClick\"]);\n\n    var ref = useRef(null);\n\n    var _React$useState = useState(true),\n        isNativeCheckbox = _React$useState[0],\n        setIsNativeCheckbox = _React$useState[1];\n\n    var onChangeRef = useLiveRef(htmlOnChange);\n    var onClickRef = useLiveRef(htmlOnClick);\n    useEffect(function () {\n      var element = ref.current;\n\n      if (!element) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine whether the element is a native checkbox because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/checkbox\") : void 0;\n        return;\n      }\n\n      if (element.tagName !== \"INPUT\" || element.type !== \"checkbox\") {\n        setIsNativeCheckbox(false);\n      }\n    }, []);\n    useIndeterminateState(ref, options);\n    var onChange = useCallback(function (event) {\n      var element = event.currentTarget;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      if (onChangeRef.current) {\n        // If component is NOT rendered as a native input, it will not have\n        // the `checked` property. So we assign it for consistency.\n        if (!isNativeCheckbox) {\n          element.checked = !element.checked;\n        }\n\n        onChangeRef.current(event);\n      }\n\n      if (!options.setState) return;\n\n      if (typeof options.value === \"undefined\") {\n        options.setState(!options.checked);\n      } else {\n        var state = Array.isArray(options.state) ? options.state : [];\n        var index = state.indexOf(options.value);\n\n        if (index === -1) {\n          options.setState([].concat(state, [options.value]));\n        } else {\n          options.setState(removeIndexFromArray(state, index));\n        }\n      }\n    }, [options.disabled, isNativeCheckbox, options.setState, options.value, options.checked, options.state]);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      if (isNativeCheckbox) return;\n      fireChange(event.currentTarget, onChange);\n    }, [isNativeCheckbox, onChange]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: !isNativeCheckbox ? \"checkbox\" : undefined,\n      type: isNativeCheckbox ? \"checkbox\" : undefined,\n      value: isNativeCheckbox ? options.value : undefined,\n      checked: options.checked,\n      \"aria-checked\": options.state === \"indeterminate\" ? \"mixed\" : options.checked,\n      onChange: onChange,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar Checkbox = createComponent({\n  as: \"input\",\n  memo: true,\n  useHook: useCheckbox\n});\nexport { Checkbox, useCheckbox };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckBoxTask/node_modules/reakit/es/Checkbox/Checkbox.js"],"names":["_","_objectWithoutPropertiesLoose","a","_objectSpread2","createComponent","createHook","useRef","useState","useEffect","useCallback","useForkRef","warning","useLiveRef","useClickable","removeIndexFromArray","createEvent","CHECKBOX_STATE_KEYS","CHECKBOX_KEYS","concat","getChecked","options","checked","value","state","Array","isArray","indexOf","fireChange","element","onChange","event","Object","defineProperties","type","target","currentTarget","useIndeterminateState","ref","current","process","env","NODE_ENV","indeterminate","useCheckbox","name","compose","keys","useOptions","_ref","_ref2","_ref$unstable_clickOn","unstable_clickOnEnter","useProps","_ref3","htmlRef","htmlOnChange","htmlOnClick","onClick","htmlProps","_React$useState","isNativeCheckbox","setIsNativeCheckbox","onChangeRef","onClickRef","tagName","disabled","stopPropagation","preventDefault","setState","index","_onClickRef$current","call","defaultPrevented","role","undefined","Checkbox","as","memo","useHook"],"mappings":"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","sourcesContent":["import { _ as _objectWithoutPropertiesLoose, a as _objectSpread2 } from '../_rollupPluginBabelHelpers-1f0bf8c2.js';\nimport { createComponent } from 'reakit-system/createComponent';\nimport { createHook } from 'reakit-system/createHook';\nimport 'reakit-utils/shallowEqual';\nimport '../Box/Box.js';\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { useForkRef } from 'reakit-utils/useForkRef';\nimport 'reakit-utils/isButton';\nimport { warning } from 'reakit-warning';\nimport { useLiveRef } from 'reakit-utils/useLiveRef';\nimport 'reakit-utils/isSelfTarget';\nimport 'reakit-utils/useIsomorphicEffect';\nimport 'reakit-utils/hasFocusWithin';\nimport 'reakit-utils/isPortalEvent';\nimport 'reakit-utils/getActiveElement';\nimport 'reakit-utils/canUseDOM';\nimport 'reakit-utils/tabbable';\nimport '../Tabbable/Tabbable.js';\nimport { useClickable } from '../Clickable/Clickable.js';\nimport { removeIndexFromArray } from 'reakit-utils/removeIndexFromArray';\nimport { createEvent } from 'reakit-utils/createEvent';\n\n// Automatically generated\nvar CHECKBOX_STATE_KEYS = [\"state\", \"setState\"];\nvar CHECKBOX_KEYS = [].concat(CHECKBOX_STATE_KEYS, [\"value\", \"checked\"]);\n\nfunction getChecked(options) {\n  if (typeof options.checked !== \"undefined\") {\n    return options.checked;\n  }\n\n  if (typeof options.value === \"undefined\") {\n    return !!options.state;\n  }\n\n  var state = Array.isArray(options.state) ? options.state : [];\n  return state.indexOf(options.value) !== -1;\n}\n\nfunction fireChange(element, onChange) {\n  var event = createEvent(element, \"change\");\n  Object.defineProperties(event, {\n    type: {\n      value: \"change\"\n    },\n    target: {\n      value: element\n    },\n    currentTarget: {\n      value: element\n    }\n  });\n  onChange === null || onChange === void 0 ? void 0 : onChange(event);\n}\n\nfunction useIndeterminateState(ref, options) {\n  useEffect(function () {\n    var element = ref.current;\n\n    if (!element) {\n      process.env.NODE_ENV !== \"production\" ? warning(options.state === \"indeterminate\", \"Can't set indeterminate state because `ref` wasn't passed to component.\", \"See https://reakit.io/docs/checkbox/#indeterminate-state\") : void 0;\n      return;\n    }\n\n    if (options.state === \"indeterminate\") {\n      element.indeterminate = true;\n    } else if (element.indeterminate) {\n      element.indeterminate = false;\n    }\n  }, [options.state, ref]);\n}\n\nvar useCheckbox = createHook({\n  name: \"Checkbox\",\n  compose: useClickable,\n  keys: CHECKBOX_KEYS,\n  useOptions: function useOptions(_ref, _ref2) {\n    var value = _ref2.value,\n        checked = _ref2.checked;\n\n    var _ref$unstable_clickOn = _ref.unstable_clickOnEnter,\n        unstable_clickOnEnter = _ref$unstable_clickOn === void 0 ? false : _ref$unstable_clickOn,\n        options = _objectWithoutPropertiesLoose(_ref, [\"unstable_clickOnEnter\"]);\n\n    return _objectSpread2({\n      unstable_clickOnEnter: unstable_clickOnEnter,\n      value: value,\n      checked: getChecked(_objectSpread2({\n        checked: checked\n      }, options))\n    }, options);\n  },\n  useProps: function useProps(options, _ref3) {\n    var htmlRef = _ref3.ref,\n        htmlOnChange = _ref3.onChange,\n        htmlOnClick = _ref3.onClick,\n        htmlProps = _objectWithoutPropertiesLoose(_ref3, [\"ref\", \"onChange\", \"onClick\"]);\n\n    var ref = useRef(null);\n\n    var _React$useState = useState(true),\n        isNativeCheckbox = _React$useState[0],\n        setIsNativeCheckbox = _React$useState[1];\n\n    var onChangeRef = useLiveRef(htmlOnChange);\n    var onClickRef = useLiveRef(htmlOnClick);\n    useEffect(function () {\n      var element = ref.current;\n\n      if (!element) {\n        process.env.NODE_ENV !== \"production\" ? warning(true, \"Can't determine whether the element is a native checkbox because `ref` wasn't passed to the component\", \"See https://reakit.io/docs/checkbox\") : void 0;\n        return;\n      }\n\n      if (element.tagName !== \"INPUT\" || element.type !== \"checkbox\") {\n        setIsNativeCheckbox(false);\n      }\n    }, []);\n    useIndeterminateState(ref, options);\n    var onChange = useCallback(function (event) {\n      var element = event.currentTarget;\n\n      if (options.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        return;\n      }\n\n      if (onChangeRef.current) {\n        // If component is NOT rendered as a native input, it will not have\n        // the `checked` property. So we assign it for consistency.\n        if (!isNativeCheckbox) {\n          element.checked = !element.checked;\n        }\n\n        onChangeRef.current(event);\n      }\n\n      if (!options.setState) return;\n\n      if (typeof options.value === \"undefined\") {\n        options.setState(!options.checked);\n      } else {\n        var state = Array.isArray(options.state) ? options.state : [];\n        var index = state.indexOf(options.value);\n\n        if (index === -1) {\n          options.setState([].concat(state, [options.value]));\n        } else {\n          options.setState(removeIndexFromArray(state, index));\n        }\n      }\n    }, [options.disabled, isNativeCheckbox, options.setState, options.value, options.checked, options.state]);\n    var onClick = useCallback(function (event) {\n      var _onClickRef$current;\n\n      (_onClickRef$current = onClickRef.current) === null || _onClickRef$current === void 0 ? void 0 : _onClickRef$current.call(onClickRef, event);\n      if (event.defaultPrevented) return;\n      if (isNativeCheckbox) return;\n      fireChange(event.currentTarget, onChange);\n    }, [isNativeCheckbox, onChange]);\n    return _objectSpread2({\n      ref: useForkRef(ref, htmlRef),\n      role: !isNativeCheckbox ? \"checkbox\" : undefined,\n      type: isNativeCheckbox ? \"checkbox\" : undefined,\n      value: isNativeCheckbox ? options.value : undefined,\n      checked: options.checked,\n      \"aria-checked\": options.state === \"indeterminate\" ? \"mixed\" : options.checked,\n      onChange: onChange,\n      onClick: onClick\n    }, htmlProps);\n  }\n});\nvar Checkbox = createComponent({\n  as: \"input\",\n  memo: true,\n  useHook: useCheckbox\n});\n\nexport { Checkbox, useCheckbox };\n"]},"metadata":{},"sourceType":"module"}