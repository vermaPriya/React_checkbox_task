{"ast":null,"code":"/**\n * Splits an object (`props`) into a tuple where the first item is an object\n * with the passed `keys`, and the second item is an object with these keys\n * omitted.\n *\n * @example\n * import { splitProps } from \"reakit-utils\";\n *\n * splitProps({ a: \"a\", b: \"b\" }, [\"a\"]); // [{ a: \"a\" }, { b: \"b\" }]\n */\nfunction splitProps(props, keys) {\n  var propsKeys = Object.keys(props);\n  var picked = {};\n  var omitted = {};\n\n  for (var _i = 0, _propsKeys = propsKeys; _i < _propsKeys.length; _i++) {\n    var key = _propsKeys[_i];\n\n    if (keys.indexOf(key) >= 0) {\n      picked[key] = props[key];\n    } else {\n      omitted[key] = props[key];\n    }\n  }\n\n  return [picked, omitted];\n}\n\nexport { splitProps };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckboxTask/React_checkbox_task/node_modules/reakit-utils/es/splitProps.js"],"names":["splitProps","props","keys","propsKeys","Object","picked","omitted","_i","_propsKeys","length","key","indexOf"],"mappings":"AAAA;;;;;;;;;;AAUA,SAASA,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiC;AAC/B,MAAIC,SAAS,GAAGC,MAAM,CAACF,IAAP,CAAYD,KAAZ,CAAhB;AACA,MAAII,MAAM,GAAG,EAAb;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,OAAK,IAAIC,EAAE,GAAG,CAAT,EAAYC,UAAU,GAAGL,SAA9B,EAAyCI,EAAE,GAAGC,UAAU,CAACC,MAAzD,EAAiEF,EAAE,EAAnE,EAAuE;AACrE,QAAIG,GAAG,GAAGF,UAAU,CAACD,EAAD,CAApB;;AAEA,QAAIL,IAAI,CAACS,OAAL,CAAaD,GAAb,KAAqB,CAAzB,EAA4B;AAC1BL,MAAAA,MAAM,CAACK,GAAD,CAAN,GAAcT,KAAK,CAACS,GAAD,CAAnB;AACD,KAFD,MAEO;AACLJ,MAAAA,OAAO,CAACI,GAAD,CAAP,GAAeT,KAAK,CAACS,GAAD,CAApB;AACD;AACF;;AAED,SAAO,CAACL,MAAD,EAASC,OAAT,CAAP;AACD;;AAED,SAASN,UAAT","sourcesContent":["/**\n * Splits an object (`props`) into a tuple where the first item is an object\n * with the passed `keys`, and the second item is an object with these keys\n * omitted.\n *\n * @example\n * import { splitProps } from \"reakit-utils\";\n *\n * splitProps({ a: \"a\", b: \"b\" }, [\"a\"]); // [{ a: \"a\" }, { b: \"b\" }]\n */\nfunction splitProps(props, keys) {\n  var propsKeys = Object.keys(props);\n  var picked = {};\n  var omitted = {};\n\n  for (var _i = 0, _propsKeys = propsKeys; _i < _propsKeys.length; _i++) {\n    var key = _propsKeys[_i];\n\n    if (keys.indexOf(key) >= 0) {\n      picked[key] = props[key];\n    } else {\n      omitted[key] = props[key];\n    }\n  }\n\n  return [picked, omitted];\n}\n\nexport { splitProps };\n"]},"metadata":{},"sourceType":"module"}