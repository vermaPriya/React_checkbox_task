{"ast":null,"code":"import { flatten } from 'reakit-utils/flatten';\n/**\n * Logs `messages` to the console using `console.warn` based on a `condition`.\n *\n * @example\n * import { warning } from \"reakit-warning\";\n *\n * warning(true, \"a\", \"b\"); // console.warn(\"a\", \"\\n\", \"b\")\n * warning(false, \"a\", \"b\"); // does nothing\n */\n\nfunction warning(condition) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _console;\n\n    if (!condition) return;\n\n    for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      messages[_key - 1] = arguments[_key];\n    }\n\n    var warns = flatten(messages.map(function (message) {\n      return [message, \"\\n\"];\n    })); // eslint-disable-next-line no-console\n\n    (_console = console).warn.apply(_console, warns.slice(0, -1)); // Throwing an error and catching it immediately to improve debugging\n    // A consumer can use 'pause on caught exceptions'\n    // https://github.com/facebook/react/issues/4216\n\n\n    try {\n      throw Error(warns.join(\"\"));\n    } catch (x) {// do nothing\n    }\n  }\n}\n\nexport { warning };","map":{"version":3,"sources":["/home/priya/Desktop/reactCheckBoxTask/node_modules/reakit-warning/es/warning.js"],"names":["flatten","warning","condition","process","env","NODE_ENV","_console","_len","arguments","length","messages","Array","_key","warns","map","message","console","warn","apply","slice","Error","join","x"],"mappings":"AAAA,SAASA,OAAT,QAAwB,sBAAxB;AAEA;;;;;;;;;;AAUA,SAASC,OAAT,CAAiBC,SAAjB,EAA4B;AAC1B,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIC,QAAJ;;AAEA,QAAI,CAACJ,SAAL,EAAgB;;AAEhB,SAAK,IAAIK,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,QAAQ,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAAxC,EAA4EK,IAAI,GAAG,CAAxF,EAA2FA,IAAI,GAAGL,IAAlG,EAAwGK,IAAI,EAA5G,EAAgH;AAC9GF,MAAAA,QAAQ,CAACE,IAAI,GAAG,CAAR,CAAR,GAAqBJ,SAAS,CAACI,IAAD,CAA9B;AACD;;AAED,QAAIC,KAAK,GAAGb,OAAO,CAACU,QAAQ,CAACI,GAAT,CAAa,UAAUC,OAAV,EAAmB;AAClD,aAAO,CAACA,OAAD,EAAU,IAAV,CAAP;AACD,KAFmB,CAAD,CAAnB,CATyC,CAWpC;;AAEL,KAACT,QAAQ,GAAGU,OAAZ,EAAqBC,IAArB,CAA0BC,KAA1B,CAAgCZ,QAAhC,EAA0CO,KAAK,CAACM,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAA1C,EAbyC,CAasB;AAC/D;AACA;;;AAGA,QAAI;AACF,YAAMC,KAAK,CAACP,KAAK,CAACQ,IAAN,CAAW,EAAX,CAAD,CAAX;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU,CAAC;AACZ;AACF;AACF;;AAED,SAASrB,OAAT","sourcesContent":["import { flatten } from 'reakit-utils/flatten';\n\n/**\n * Logs `messages` to the console using `console.warn` based on a `condition`.\n *\n * @example\n * import { warning } from \"reakit-warning\";\n *\n * warning(true, \"a\", \"b\"); // console.warn(\"a\", \"\\n\", \"b\")\n * warning(false, \"a\", \"b\"); // does nothing\n */\n\nfunction warning(condition) {\n  if (process.env.NODE_ENV !== \"production\") {\n    var _console;\n\n    if (!condition) return;\n\n    for (var _len = arguments.length, messages = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      messages[_key - 1] = arguments[_key];\n    }\n\n    var warns = flatten(messages.map(function (message) {\n      return [message, \"\\n\"];\n    })); // eslint-disable-next-line no-console\n\n    (_console = console).warn.apply(_console, warns.slice(0, -1)); // Throwing an error and catching it immediately to improve debugging\n    // A consumer can use 'pause on caught exceptions'\n    // https://github.com/facebook/react/issues/4216\n\n\n    try {\n      throw Error(warns.join(\"\"));\n    } catch (x) {// do nothing\n    }\n  }\n}\n\nexport { warning };\n"]},"metadata":{},"sourceType":"module"}